---
import Svg from "../components/Svg.astro";
import LiNav from "../components/LiNav.astro";
import SubLi from "../components/SubLi.astro";

const generos: { link: string; tipo: string }[] = [
    { link: "#", tipo: "Acción" },
    { link: "#", tipo: "Animada" },
    { link: "#", tipo: "Aventura" },
    { link: "#", tipo: "Ciencia Ficción" },
    { link: "#", tipo: "Comedia" },
    { link: "#", tipo: "Crimen" },
    { link: "#", tipo: "Drama" },
    { link: "#", tipo: "Familiar" },
    { link: "#", tipo: "Fantasía" },
    { link: "#", tipo: "Historia" },
    { link: "#", tipo: "Misterio" },
    { link: "#", tipo: "Romance" },
    { link: "#", tipo: "Suspenso" },
    { link: "#", tipo: "Terror" },
];

const anios: { link: string; tipo: string }[] = [
    { link: "#", tipo: "2024" },
    { link: "#", tipo: "2023" },
    { link: "#", tipo: "2022" },
    { link: "#", tipo: "2021" },
    { link: "#", tipo: "2020" },
    { link: "#", tipo: "2019" },
    { link: "#", tipo: "2018" },
    { link: "#", tipo: "2017" },
    { link: "#", tipo: "2016" },
    { link: "#", tipo: "2015" },
];
---

<nav
    class="nav [grid-area:nav] w-1/2 h-[80dvh] max-w-[250px] bg-bgs fixed top-20 left-[-100%] z-20 flex flex-col gap-1 rounded-r-xl shadow-l-lg overflow-y-auto scroll-smooth md:relative md:top-0 md:left-0 md:w-full md:min-w-[250px]"
>
    <h3 class="text-xs text-sky-100/50 uppercase p-4">Navegación</h3>

    <ul class="h-min nav_ul">
        <li class="li_inicio">
            <a
                class="flex items-center gap-4 text-sky-200 text-sm p-2 px-4 hover:bg-sky-50/10 transition-colors duration-300 ease-in-out links"
                href="/"
            >
                <Svg class="w-4 fill-sky-200">
                    <path
                        d="M454.333 122.112V129.612L460.333 134.112C483.365 151.386 497 178.457 497 207.445V405.333C497 455.865 455.865 497 405.333 497H362.667C359.163 497 356.333 494.168 356.333 490.667V298.667C356.333 278.638 340.07 262.333 320 262.333H192C171.93 262.333 155.667 278.638 155.667 298.667V490.667C155.667 494.168 152.837 497 149.333 497H106.667C56.1349 497 15 455.865 15 405.333V207.445C15 176.913 30.1003 148.525 55.3905 131.451L204.719 30.6756C204.72 30.6749 204.721 30.6743 204.722 30.6736C235.896 9.64743 276.104 9.64754 307.279 30.6739C307.28 30.6745 307.281 30.675 307.281 30.6756L418.276 105.575L441.667 121.359V93.1414V42.6667C441.667 39.1652 444.497 36.3334 448 36.3334C451.503 36.3334 454.333 39.1652 454.333 42.6667V122.112Z"
                    ></path>
                </Svg>
                <span class="w-full flex justify-between items-center">
                    Inicio
                </span>
            </a>
        </li>

        <LiNav opcion="Películas">
            <path
                slot="icono"
                d="M328.714 371.288C348.549 359.4 350.978 332.709 336.003 317.195V315.281L328.08 311.042L229.503 258.285C206.294 244.715 177 261.437 177 288.427V394.261C177 421.251 206.294 437.973 229.503 424.403L328.08 371.647L328.402 371.475L328.714 371.288ZM269.045 134.333L367.045 36.3334H405.333C408.012 36.3334 410.663 36.4488 413.28 36.675L315.621 134.333H269.045ZM497 128V134.333H418.379L479.076 73.6358C490.347 88.865 497 107.673 497 128ZM264.288 36.3334L166.288 134.333H131.25L230.622 36.3334H264.288ZM15 134.333V128C15 77.4683 56.1349 36.3334 106.667 36.3334H127.14L27.7678 134.333H15ZM497 207V384C497 434.532 455.865 475.667 405.333 475.667H106.667C56.1349 475.667 15 434.532 15 384V207H497Z"
            ></path>

            <ul
                slot="lista"
                class="bg-sky-950/50 text-sm flex flex-col pl-4 subLista subLista_peliculas"
                id="peliculas"
            >
                <SubLi subLink="#seccion_peliculas" name="Todas las películas" />
                <SubLi subLink="#seccion_peliculas_populares" name="Más populares" />
                <SubLi subLink="#seccion_ultimos_estrenos" name="Últimos estrenos" />
            </ul>
        </LiNav>

        <LiNav opcion="Series">
            <path
                slot="icono"
                d="M177 85.3333C177 124.174 145.508 155.667 106.667 155.667C67.8256 155.667 36.3333 124.174 36.3333 85.3333C36.3333 46.4923 67.8256 15 106.667 15C145.508 15 177 46.4923 177 85.3333ZM228.333 85.3333C228.333 46.4923 259.826 15 298.667 15C337.508 15 369 46.4923 369 85.3333C369 124.174 337.508 155.667 298.667 155.667C259.826 155.667 228.333 124.174 228.333 85.3333ZM390.333 298.667V426.667C390.333 465.508 358.841 497 320 497H85.3333C46.4923 497 15 465.508 15 426.667V298.667C15 259.826 46.4923 228.333 85.3333 228.333H320C358.841 228.333 390.333 259.826 390.333 298.667ZM463 429.008V276.101L474.92 264.181C483.095 256.016 497 261.824 497 273.301V431.787C497 443.321 483.075 449.084 474.927 440.935L463 429.008Z"
            ></path>

            <ul
                slot="lista"
                class="bg-sky-950/50 text-sm flex flex-col pl-4 subLista subLista_series"
                id="series"
            >
                <SubLi subLink="#seccion_series" name="Todas las series" />
                <SubLi subLink="#seccion_series_populares" name="Series populares" />
                <SubLi subLink="#seccion_series_estrenos" name="Últimos estrenos" />
            </ul>
        </LiNav>

        <LiNav opcion="Géneros">
            <path
                slot="icono"
                d="M480 134.333H170.667C166.158 134.333 161.834 132.542 158.646 129.354C155.458 126.166 153.667 121.842 153.667 117.333C153.667 112.825 155.458 108.501 158.646 105.312C161.834 102.124 166.158 100.333 170.667 100.333H480C484.509 100.333 488.833 102.124 492.021 105.312C495.209 108.501 497 112.825 497 117.333C497 121.842 495.209 126.166 492.021 129.354C488.833 132.542 484.509 134.333 480 134.333Z"
            ></path>
            <path
                slot="icono"
                d="M170.667 249.667H480C484.509 249.667 488.833 251.458 492.021 254.646C495.209 257.834 497 262.158 497 266.667C497 271.175 495.209 275.499 492.021 278.688C488.833 281.876 484.509 283.667 480 283.667L170.667 283.667C166.158 283.667 161.834 281.876 158.646 278.688C155.458 275.499 153.667 271.175 153.667 266.667C153.667 262.158 155.458 257.834 158.646 254.646C161.834 251.458 166.158 249.667 170.667 249.667Z"
            ></path>
            <path
                slot="icono"
                d="M170.667 399H480C484.509 399 488.833 400.791 492.021 403.979C495.209 407.167 497 411.491 497 416C497 420.509 495.209 424.833 492.021 428.021C488.833 431.209 484.509 433 480 433H170.667C166.158 433 161.834 431.209 158.646 428.021C155.458 424.833 153.667 420.509 153.667 416C153.667 411.491 155.458 407.167 158.646 403.979C161.834 400.791 166.158 399 170.667 399Z"
            ></path>
            <path
                slot="icono"
                d="M91.6667 117.333C91.6667 138.504 74.5042 155.667 53.3333 155.667C32.1624 155.667 15 138.504 15 117.333C15 96.1624 32.1624 79 53.3333 79C74.5042 79 91.6667 96.1624 91.6667 117.333Z"
            ></path>
            <path
                slot="icono"
                d="M91.6667 256C91.6667 277.171 74.5042 294.333 53.3333 294.333C32.1624 294.333 15 277.171 15 256C15 234.829 32.1624 217.667 53.3333 217.667C74.5042 217.667 91.6667 234.829 91.6667 256Z"
            ></path>
            <path
                slot="icono"
                d="M91.6667 405.333C91.6667 426.504 74.5042 443.667 53.3333 443.667C32.1624 443.667 15 426.504 15 405.333C15 384.162 32.1624 367 53.3333 367C74.5042 367 91.6667 384.162 91.6667 405.333Z"
            ></path>

            <ul
                slot="lista"
                class="bg-sky-950/50 text-sm flex flex-col pl-4 subLista subLista_generos"
                id="generos"
            >
                {
                    [...generos].map((genero) => {
                        return (
                            <SubLi subLink={genero.link} name={genero.tipo} />
                        );
                    })
                }
            </ul>
        </LiNav>

        <LiNav opcion="Año">
            <path
                slot="icono"
                d="M320 333.333C320 309.287 310.448 286.226 293.444 269.222C276.441 252.219 253.38 242.667 229.333 242.667C205.287 242.667 182.226 252.219 165.222 269.222C148.219 286.226 138.667 309.287 138.667 333.333C138.667 341.82 142.038 349.96 148.039 355.961C154.04 361.962 162.18 365.333 170.667 365.333C179.154 365.333 187.293 361.962 193.294 355.961C199.295 349.96 202.667 341.82 202.667 333.333C202.667 326.261 205.476 319.478 210.477 314.477C215.478 309.476 222.261 306.667 229.333 306.667C236.406 306.667 243.189 309.476 248.19 314.477C253.191 319.478 256 326.261 256 333.333C256 346.667 230.571 365.739 210.133 381.056C176.64 406.187 138.667 434.667 138.667 480C138.667 488.487 142.038 496.626 148.039 502.627C154.04 508.629 162.18 512 170.667 512H288C296.487 512 304.626 508.629 310.628 502.627C316.629 496.626 320 488.487 320 480C320 471.513 316.629 463.374 310.628 457.373C304.626 451.371 296.487 448 288 448H228.267C234.88 442.581 242.027 437.333 248.64 432.277C282.027 407.147 320 378.667 320 333.333Z"
            ></path>
            <path
                slot="icono"
                d="M480 234.667C471.513 234.667 463.374 238.038 457.373 244.039C451.371 250.04 448 258.18 448 266.667V362.667H432C424.931 362.655 418.155 359.842 413.156 354.844C408.158 349.845 405.345 343.069 405.333 336V266.667C405.333 258.18 401.962 250.04 395.961 244.039C389.959 238.038 381.82 234.667 373.333 234.667C364.846 234.667 356.707 238.038 350.706 244.039C344.705 250.04 341.333 258.18 341.333 266.667V336C341.361 360.038 350.923 383.083 367.92 400.08C384.917 417.077 407.962 426.638 432 426.667H448V480C448 488.487 451.371 496.626 457.373 502.627C463.374 508.629 471.513 512 480 512C488.487 512 496.626 508.629 502.627 502.627C508.628 496.626 512 488.487 512 480V266.667C512 258.18 508.628 250.04 502.627 244.039C496.626 238.038 488.487 234.667 480 234.667Z"
            ></path>
            <path
                slot="icono"
                d="M475.584 57.7494L447.36 85.9734C405.51 38.8721 347.759 8.85893 285.162 1.67861C222.564 -5.50172 159.518 10.6552 108.089 47.0567C56.6602 83.4583 20.4622 137.548 6.42344 198.971C-7.61536 260.395 1.49119 324.839 32.0001 379.968C34.0382 383.644 36.7803 386.882 40.0699 389.498C43.3594 392.114 47.132 394.056 51.1722 395.214C55.2125 396.372 59.4412 396.722 63.6169 396.246C67.7927 395.77 71.8338 394.475 75.5094 392.437C79.185 390.399 82.4232 387.657 85.0391 384.368C87.6549 381.078 89.5972 377.305 90.7551 373.265C91.913 369.225 92.2638 364.996 91.7874 360.82C91.311 356.645 90.0168 352.604 87.9787 348.928C64.9166 307.321 58.1366 258.63 68.9547 212.306C79.7729 165.981 107.417 125.329 146.522 98.2402C185.627 71.1514 233.402 59.5587 280.573 65.7123C327.744 71.866 370.946 95.3271 401.792 131.541L377.749 155.584C374.767 158.568 372.736 162.368 371.913 166.506C371.09 170.644 371.513 174.932 373.127 178.83C374.741 182.728 377.475 186.059 380.982 188.403C384.49 190.747 388.613 191.999 392.832 192H490.667C496.325 192 501.751 189.752 505.752 185.752C509.752 181.751 512 176.325 512 170.667V72.832C511.999 68.6133 510.747 64.4896 508.403 60.9822C506.059 57.4748 502.728 54.7412 498.83 53.1269C494.932 51.5126 490.644 51.0901 486.506 51.9129C482.368 52.7357 478.568 54.7667 475.584 57.7494Z"
            ></path>

            <ul
                slot="lista"
                class="bg-sky-950/50 text-xs flex flex-wrap pl-4 subLista subLista_anios"
                id="anios"
            >
                {
                    anios.map((anio) => {
                        return <SubLi subLink={anio.link} name={anio.tipo} />;
                    })
                }
            </ul>
        </LiNav>
    </ul>
</nav>

<style>
    .nav {
        scrollbar-width: thin;
        scrollbar-color: #38bdf880 #00000000;
        scroll-behavior: smooth;
        transition: left 500ms cubic-bezier(0, 0.11, 0.4, 1.2);

        &.active {
            left: 1rem;
        }
    }
</style>

<script>
    // imports 
    import {movies, series} from "../../movies.json";

    const $literalesNav = document.querySelectorAll(".literal"); //literales principales li
    const $subListasContainer = document.querySelectorAll(".sublista_container"); //container de SubListas div


    // sublistas
    const $subListaGeneros = document.querySelector(".subLista_generos") as HTMLElement;
    const $subListaAnios = document.querySelector(".subLista_anios") as HTMLElement;

    $literalesNav.forEach((literal) => {
        literal.addEventListener("click", () => {
            const containerActual = literal.children[1]
            if(literal.classList.contains('active')){
                literal.classList.remove('active')
                return
            }
            $literalesNav.forEach(li=>li.classList.remove('active'))
            $subListasContainer.forEach(container=>container.classList.remove('generosHeight', 'aniosHeight'))
            literal.classList.add('active')
            
            if(containerActual.children[0].classList.contains('subLista_generos')){
                containerActual.classList.add('generosHeight')
            }
            if(containerActual.children[0].classList.contains('subLista_anios')){
                containerActual.classList.add('aniosHeight')
            }

        });
    });

    const liGenero = $subListaGeneros.querySelectorAll('li .subLink') //literales secoundarios a

    // secciones
    const $seccionContenido = document.querySelector('.seccion_contenido') as HTMLElement
    
    liGenero.forEach((link)=>{
        link.addEventListener('click', (e)=>{
            e.preventDefault()
            limpiarSeccion ()

            const opcion = e.target as HTMLElement
            const tituloSeccion = opcion.textContent as string
            const divContenedor = crearSeccion($seccionContenido, tituloSeccion)
            agregarHijosDiv(divContenedor, tituloSeccion)

        })
    })

    function limpiarSeccion (){
        const $secciones = document.querySelectorAll('.seccion') as NodeListOf<HTMLElement>
        $secciones.forEach(seccion => seccion.classList.add('hidden'))
    }

    function crearSeccion (seccion : HTMLElement, titulo:string){
        const seccionContainer = document.createElement('section')
        const tituloContainer = document.createElement('h2')
        const divContainer = document.createElement('div')

        seccionContainer.classList.add("pt-5", "relative", "before:content-['']", "before:absolute", "before:w-full", "before:h-[2px]", "before:rounded-full", "before:[background-image:linear-gradient(90deg,#38bdf8,#0c4a6e,#0c4a6e,#38bdf8)]", "before:top-0", "w-full", "seccion")
        tituloContainer.classList.add("text-xl", "font-bold")
        tituloContainer.textContent = titulo
        divContainer.classList.add("grid", "grid-cols-[repeat(auto-fill,minmax(130px,1fr))]", "gap-5", "my-5", "w-full")

        seccionContainer.appendChild(tituloContainer)
        seccionContainer.appendChild(divContainer)
        seccion.appendChild(seccionContainer)

        return divContainer
    }

    function agregarHijosDiv (div : HTMLElement, palabra:string){
        const generos = [...movies, ...series]
        generos.map(({title, image, rating, genre})=>{
            if(genre.includes(palabra)){
                const card = crearCard(title, rating, image)
                div.appendChild(card)
            }
        })
    }

    function crearCard (tituloCard?:string, rating?:number, image?:string) {
        const cardArticle = document.createElement('article')
        cardArticle.classList.add("rounded-lg", "overflow-hidden", "bg-bgs", "hover:shadow-xl", "transition-all", "duration-300", "ease-in-out")

        const figure = document.createElement('figure')
        figure.classList.add("aspect-ratio-16/9", "overflow-hidden", "relative", "group")

        const img = document.createElement('img')
        img.classList.add("w-full", "[aspect-ratio:1/1.4]", "object-cover", "group-hover:scale-110", "group-hover:brightness-[.30]", "transition-all", "duration-300", "ease-in-out")
        img.src = `${image}` // url imgen
        img.alt = `Image`
        figure.appendChild(img)

        const a = document.createElement('a')
        a.classList.add("absolute", "inset-0", "flex", "justify-center", "items-center", "scale-0", "group-hover:scale-100", "transition-all", "duration-300", "ease-in-out", "link")
        a.href = `movies/${tituloCard}`
        figure.appendChild(a)

        const svgNS = "http://www.w3.org/2000/svg";
        const svg = document.createElementNS(svgNS, 'svg')
        svg.classList.add("w-16", "fill-sky-100")
        svg.setAttribute('viewBox', '0 0 512 512')
        svg.setAttribute('fill', 'none')
        svg.setAttribute('stroke', 'none')
        svg.setAttribute('stroke-width', '30')
        svg.setAttribute('stroke-linejoin', 'round')

        const path = document.createElementNS(svgNS, 'path')
        path.setAttribute('d', 'M231.637 168.355L231.715 168.399L231.793 168.442L341.826 228.693L342.435 229.035C352.586 234.738 358.355 244.69 358.355 256.021C358.355 267.368 352.577 277.281 342.691 282.865L231.58 343.707L231.502 343.75L231.424 343.794C226.759 346.42 221.66 347.709 216.576 347.709C211.267 347.709 205.906 346.32 200.964 343.428L200.958 343.424C191.334 337.797 185.688 327.945 185.688 316.8V195.221C185.688 184.076 191.334 174.224 200.958 168.597L200.96 168.596C210.544 162.99 221.925 162.886 231.637 168.355ZM15 256C15 123.122 123.122 15 256 15C388.878 15 497 123.122 497 256C497 388.878 388.878 497 256 497C123.122 497 15 388.878 15 256ZM27.6667 256C27.6667 381.916 130.084 484.333 256 484.333C381.916 484.333 484.333 381.916 484.333 256C484.333 130.084 381.916 27.6667 256 27.6667C130.084 27.6667 27.6667 130.084 27.6667 256Z')

        svg.appendChild(path)
        a.appendChild(svg)


        const footer = document.createElement('footer')
        footer.classList.add("flex", "flex-col", "gap-2", "px-4", "py-2")

        const h3 = document.createElement('h3')
        h3.classList.add("text-center", "truncate", "text-sm")
        h3.textContent = `${tituloCard}`
        footer.appendChild(h3)

        const span = document.createElement('span')
        span.classList.add("flex", "items-center", "gap-2", "text-xs")

        const svg2 = document.createElementNS(svgNS, 'svg')
        svg2.classList.add("w-4", "fill-yellow-500","order-1")
        svg2.setAttribute('viewBox', '0 0 512 512')
        svg2.setAttribute('fill', 'none')
        svg2.setAttribute('stroke', 'none')
        svg2.setAttribute('stroke-width', '30')
        svg2.setAttribute('stroke-linejoin', 'round')

        const path2 = document.createElementNS(svgNS,'path')
        path2.setAttribute('d', 'M74.2806 279.533H74.3256L37.2477 252.425C28.0853 245.726 21.2742 236.303 17.7872 225.501C14.3003 214.7 14.3158 203.073 17.8317 192.281C21.3476 181.49 28.1839 172.085 37.3642 165.41C46.5418 158.738 57.5927 155.136 68.9393 155.117C68.9426 155.117 68.946 155.117 68.9493 155.117L162.133 155.117H173.074L176.416 144.7L204.726 56.4652L204.727 56.4612C208.209 45.5985 215.05 36.1223 224.266 29.3991C233.481 22.6759 244.593 19.0531 256 19.0531C267.407 19.0531 278.519 22.6759 287.734 29.3991C296.95 36.1223 303.791 45.5985 307.273 56.4612L307.274 56.4652L335.584 144.7L338.926 155.117H349.867L443.136 155.117C443.139 155.117 443.143 155.117 443.146 155.117C454.493 155.136 465.543 158.738 474.721 165.41C483.901 172.085 490.738 181.49 494.254 192.281C497.769 203.073 497.785 214.7 494.298 225.501C490.812 236.3 484.003 245.721 474.844 252.42C474.842 252.422 474.84 252.423 474.838 252.425L398.897 307.887L390.136 314.285L393.47 324.609L422.312 413.931C422.312 413.932 422.312 413.932 422.312 413.932C425.811 424.77 425.784 436.438 422.234 447.259C418.683 458.081 411.793 467.498 402.553 474.156C393.314 480.815 382.2 484.372 370.812 484.317C359.423 484.261 348.345 480.596 339.171 473.847L339.166 473.844L264.883 419.252L255.993 412.719L247.109 419.258L172.847 473.914L172.777 473.966L172.708 474.018C163.625 480.866 152.573 484.597 141.198 484.654C129.822 484.711 118.733 481.091 109.583 474.333L109.443 474.23L109.3 474.13C99.9894 467.582 93.0438 458.201 89.4991 447.384C85.9544 436.567 86.0004 424.895 89.6302 414.106L89.6594 414.019L89.6876 413.932L118.53 324.609L121.864 314.285L113.103 307.887L74.2806 279.533Z')
        svg2.appendChild(path2)

        const spanRting = document.createElement('span')
        spanRting.classList.add('order-2')
        spanRting.textContent = `${rating}`

        span.appendChild(svg2)
        span.appendChild(spanRting)
        footer.appendChild(span)

        cardArticle.appendChild(figure)
        cardArticle.appendChild(footer)
        return cardArticle

    }
</script>
